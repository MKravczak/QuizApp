services:
  postgres:
    image: postgres:14-alpine
    container_name: quizapp-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: quizapp
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-schema.sql:/docker-entrypoint-initdb.d/init-schema.sql
    networks:
      - quizapp-network
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build: 
      context: ./user-service
      dockerfile: Dockerfile
    container_name: quizapp-user-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quizapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      APP_SECURITY_ANTI_POSTMAN_ENABLED: "false"
      APP_JWT_SECRET: "MIkolajKrawczakJWTSecretKey2025SuperBezpiecznyKluczDoTokenowMinimum256BitowKryptograficzny"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quizapp-network

  flashcard-service:
    build: 
      context: ./flashcard-service
      dockerfile: Dockerfile
    container_name: quizapp-flashcard-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quizapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    volumes:
      - flashcard-uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quizapp-network

  quiz-service:
    build: 
      context: ./quiz-service
      dockerfile: Dockerfile
    container_name: quizapp-quiz-service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quizapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      APP_SECURITY_ANTI_POSTMAN_ENABLED: "false"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quizapp-network

  statistics-service:
    build: 
      context: ./statistics-service
      dockerfile: Dockerfile
    container_name: quizapp-statistics-service
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quizapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quizapp-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: quizapp-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_USER_SERVICE_URL=http://user-service:8080
      - REACT_APP_FLASHCARD_SERVICE_URL=http://flashcard-service:8081
      - REACT_APP_QUIZ_SERVICE_URL=http://quiz-service:8083
      - REACT_APP_STATISTICS_SERVICE_URL=http://statistics-service:8084
      - HOST=0.0.0.0
    depends_on:
      - user-service
      - flashcard-service
      - quiz-service
      - statistics-service
    networks:
      - quizapp-network

networks:
  quizapp-network:
    driver: bridge

volumes:
  postgres-data: 
  flashcard-uploads: 