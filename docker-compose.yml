services:
  postgres:
    image: postgres:14-alpine
    container_name: quizapp-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: quizapp
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-schema.sql:/docker-entrypoint-initdb.d/init-schema.sql
    networks:
      - quizapp-network
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  quizapp:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: quizapp-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quizapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quizapp-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quizapp-frontend
    ports:
      - "80:80"
    depends_on:
      - quizapp
    networks:
      - quizapp-network

networks:
  quizapp-network:
    driver: bridge

volumes:
  postgres-data: 